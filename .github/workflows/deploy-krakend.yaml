name: Deploy KrakenD & Kong API Gateways

on:
  push:
    branches:
      - main
    paths:
      - "krakend/krakend.json"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Notifying QAP Admin Api - Starting Login in Docker
        run: |
          curl --location 'https://quantum-admin-api-stg.konneqt.cloud/webhook' \
            --header 'Content-Type: application/json' \
            --data '{
              "url": "https://deployment_unit_currentweather_news_key.on.qriarlabs.com",
              "api": "currentweather",
              "deploymentUnit": "deployment_unit_currentweather_news_key",
              "ciStatus": "Init CI"
            }'

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Set Image Name - KrakenD
        run: echo "IMAGE_NAME=${{ secrets.REGISTRY_USER }}/deployment_unit_currentweather_news_key_krakend:latest" >> $GITHUB_ENV
        env:
          IMAGE_NAME: "${{ secrets.REGISTRY_USER }}/deployment_unit_currentweather_news_key_krakend:latest"

      - name: Set Image Name - Kong
        run: echo "KONG_IMAGE_NAME=${{ secrets.REGISTRY_USER }}/deployment_unit_currentweather_news_key_kong:latest" >> $GITHUB_ENV
        env:
          KONG_IMAGE_NAME: "${{ secrets.REGISTRY_USER }}/deployment_unit_currentweather_news_key_kong:latest"

      - name: Notifying QAP Admin Api - Webhook for building image docker
        run: |
          curl --location 'https://quantum-admin-api-stg.konneqt.cloud/webhook' \
            --header 'Content-Type: application/json' \
            --data '{
              "url": "https://deployment_unit_currentweather_news_key.on.qriarlabs.com",
              "api": "currentweather",
              "deploymentUnit": "deployment_unit_currentweather_news_key",
              "ciStatus": "BUILD_IMAGE_DOCKER"
            }'
      - name: Build Docker Image - KrakenD
        run: docker build -t $IMAGE_NAME -f ./krakend/dockerfile .

      - name: Push Docker Image - KrakenD
        run: docker push $IMAGE_NAME

      - name: Build Docker Image - Kong
        run: docker build -t $KONG_IMAGE_NAME -f ./kong/dockerfile .

      - name: Push Docker Image - Kong
        run: docker push $KONG_IMAGE_NAME

      - name: Notifying QAP Admin Api - Webhook for docker push
        run: |
          curl --location 'https://quantum-admin-api-stg.konneqt.cloud/webhook' \
            --header 'Content-Type: application/json' \
            --data '{
              "url": "https://deployment_unit_currentweather_news_key.on.qriarlabs.com",
              "api": "currentweather",
              "deploymentUnit": "deployment_unit_currentweather_news_key",
              "ciStatus": "IMAGED_BUILT_AND_PUSHED"
            }'

      - name: Deploy to CapRover via Docker Image - KrakenD
        uses: caprover/deploy-from-github@v1.1.2
        with:
          server: ${{ secrets.CAPROVER_SERVER }}
          app: ${{ secrets.KRAKEND_CAPROVER_APP_NAME }}
          token: ${{ secrets.KRAKEND_CAPROVER_TOKEN }}
          image: "${{ secrets.REGISTRY_USER }}/deployment_unit_currentweather_news_key_krakend:latest"

      - name: Deploy to CapRover via Docker Image - Kong
        uses: caprover/deploy-from-github@v1.1.2
        with:
          server: ${{ secrets.CAPROVER_SERVER }}
          app: ${{ secrets.KONG_CAPROVER_APP_NAME }}
          token: ${{ secrets.KONG_CAPROVER_TOKEN }}
          image: "${{ secrets.REGISTRY_USER }}/deployment_unit_currentweather_news_key_kong:latest"

      - name: Notifying QAP Admin Api - Final
        run: |
          curl --location 'https://quantum-admin-api-stg.konneqt.cloud/webhook' \
            --header 'Content-Type: application/json' \
            --data '{
              "url": "https://deployment_unit_currentweather_news_key.on.qriarlabs.com",
              "api": "currentweather",
              "deploymentUnit": "deployment_unit_currentweather_news_key",
              "ciStatus": "DEPLOYED"
            }'